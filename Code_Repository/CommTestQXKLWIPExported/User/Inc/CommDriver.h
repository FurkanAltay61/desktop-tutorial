/*.$file${.::Inc::CommDriver.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: LwipDriver.qm
* File:  ${.::Inc::CommDriver.h}
*
* This code has been generated by QM 5.1.1 <www.state-machine.com/qm/>.
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*/
/*.$endhead${.::Inc::CommDriver.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#include "qpc.h"
#include "string.h"
#include "stdio.h"
#include "lwip/udp.h"
#include "lwip/pbuf.h"


#define MAX_TEXT_LEN 1000

enum CommDriverSignals{
    LWIP_PROCESS_SIG = Q_USER_SIG,
    LWIP_RX_SIG,
    LWIP_TX_SIG,
    UART_PROCESS_SIG,
    UART_RX_SIG,
    UART_TX_SIG
};

typedef struct TextEvtTag {
    QEvt super;                                          /* derives from QEvt */
    char text[MAX_TEXT_LEN];                             /* text to deliver */
}TextEvt;

/*.$declare${AOs::LwipDriver} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*.${AOs::LwipDriver} ......................................................*/
typedef struct {
/* protected: */
    QActive super;

/* private: */
    QTimeEvt te;

/* public: */
    char text[20];

/* private: */
    struct netif * netif;
    struct udp_pcb * upcb;
} LwipDriver;

/* public: */
void LwipDriver_ctor(LwipDriver * const me);

/* protected: */
QState LwipDriver_initial(LwipDriver * const me, void const * const par);
QState LwipDriver_LwipMngr(LwipDriver * const me, QEvt const * const e);
/*.$enddecl${AOs::LwipDriver} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*.$declare${AOs::UartDriver} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*.${AOs::UartDriver} ......................................................*/
typedef struct {
/* protected: */
    QActive super;

/* private: */
    QTimeEvt te;

/* public: */
    char text[20];
} UartDriver;

/* public: */
void UartDriver_ctor(UartDriver * const me);

/* protected: */
QState UartDriver_initial(UartDriver * const me, void const * const par);
QState UartDriver_UartMngr(UartDriver * const me, QEvt const * const e);
/*.$enddecl${AOs::UartDriver} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
